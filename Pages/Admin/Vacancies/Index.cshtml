@page
@model RecruitmentAgency.Web.Pages.Admin.Vacancies.IndexModel
@{
    ViewData["Title"] = "Управление вакансиями";
}

<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Подтверждение удаления</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                    aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Вы уверены, что хотите удалить эту вакансию? Это действие нельзя отменить.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <form id="deleteForm" method="post" asp-page-handler="Delete">
                    <input type="hidden" name="id" id="vacancyIdToDelete" />
                    <button type="submit" class="btn btn-danger">Удалить</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="container mt-4">
    <div class="d-flex justify-content-between mb-4">
        <h2>@ViewData["Title"]</h2>
        <a asp-page="Create" class="btn btn-primary">
            <i class="bi bi-plus"></i> Добавить вакансию
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow-sm">
        <div class="card-body">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Название</th>
                        <th>Компания</th>
                        <th>Зарплата</th>
                        <th>Статус</th>
                        <th>Дата создания</th>
                        <th>Действия</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var vacancy in Model.Vacancies)
                    {
                        <tr>
                            <td>@vacancy.Title</td>
                            <td>@vacancy.Company?.Name</td>
                            <td>
                                @if (vacancy.SalaryFrom.HasValue || vacancy.SalaryTo.HasValue)
                                {
                                    @($"{vacancy.SalaryFrom?.ToString("C0")} - {vacancy.SalaryTo?.ToString("C0")}")
                                }
                                else
                                {
                                    <span>По договорённости</span>
                                }
                            </td>
                            @* <td>
                                @GetStatusBadge(vacancy.Status)
                            </td> *@
                            <td>@Html.Raw(GetStatusBadge(vacancy.Status))</td>
                            <td>@vacancy.CreatedAt.ToString("dd.MM.yyyy")</td>
                            <td>
                                <div class="btn-group">
                                    <a asp-page="Edit" asp-route-id="@vacancy.Id" class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <button type="button" class="btn btn-sm btn-outline-danger"
                                        onclick="confirmDelete(@vacancy.Id)">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@* @functions {
    string GetStatusBadge(string status)
    {
        return status switch
        {
            "Published" => "<span class='badge bg-success'>Опубликована</span>",
            "Archived" => "<span class='badge bg-secondary'>Архив</span>",
            _ => "<span class='badge bg-warning'>Черновик</span>"
        };
    }
} *@

@functions {
    string GetStatusBadge(string status)
    {
        var badgeClass = status switch
        {
            "Published" => "bg-success",
            "Archived" => "bg-secondary",
            _ => "bg-warning text-dark" // Draft по умолчанию
        };

        var displayText = status switch
        {
            "Published" => "Опубликована",
            "Archived" => "В архиве",
            _ => "Черновик"
        };

        return $"<span class='badge {badgeClass}'><i class='bi {GetStatusIcon(status)} me-1'></i>{displayText}</span>";
    }

    string GetStatusIcon(string status)
    {
        return status switch
        {
            "Published" => "bi-check-circle",
            "Archived" => "bi-archive",
            _ => "bi-pencil-square" // Draft
        };
    }
}

@section Scripts {
    <script>
        function confirmDelete(vacancyId) {
            document.getElementById('vacancyIdToDelete').value = vacancyId;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }
    </script>
}